Step 1: Create MySql Database
Create table guestbook (no int primary key auto_increment, name varchar(20), msg
varchar(100), dt varchar(40));
Step 2: Create a Hibernate Project :-
File -> New Project -> Java Web -> Web application - > Next -> give the project name -
> browse the location as required -> select the checkbox – “dedicated folder for storing
libraries” -> Next
Select glassfish server -> next
Select frame work - hibernate -> select the respective database connection -> finish.
Step 3: Adding Reverse Engineering File :-
Right click on Project -> new -> other -> select Hibernate -> Hibernate Reverse
Engineering wizard file type -> next -> file name (hibernate.reveng) , folder -> click on
browse and select src->java -> next -> select guestbook table name from the available
tables option -> click add ( select the checkbox – include related files) -> finish.
Step 4: Adding Hibernate mapping files and POJOs from Database file type:-
Right click on Project -> new -> other -> select Hibernate -> Hibernate mapping files
and POJOs from Database file type) -> next -> keep the default configuration file name
file name (hibernate.cfg) and Hibernate Reverse Engineering File (hibernate.reveng) ->
type the package name (hibernate) -> finish.
Step 5: Creating JSP File :-
Right click on project -> new -> JSP -> filename -> guestbookview -> select radiobutton
-> JSP file (Standard syntax) -> Finish.


Index.jsp:-
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>User View</title>
</head>
<body>
<form action="userview.jsp" >
User Name:- <input type="text" name="uname" maxlength="20"><br>
User Type:- <input type="text" name="utype" maxlength="35">
<br><input type="submit" value="submit">
</form>
</body>
</html>


Userview.jsp:-
<%@page import="hibernet.User"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<%@page import="org.hibernate.SessionFactory"%>
<%@page import="org.hibernate.Session"%>
<%@page import="org.hibernate.cfg.Configuration"%>
<%@page import="org.hibernate.Transaction"%>
<%@page import="java.util.List"%>
<%@page import="java.util.Iterator"%>
<%!
SessionFactory sf;
org.hibernate.Session ss;
List<hibernet.User> ubook;
%>
<%
sf = new Configuration().configure().buildSessionFactory();
ss= sf.openSession();
Transaction tx=null;
User us= new User();
try
{
tx=ss.beginTransaction();
String uname=request.getParameter("uname");
String utype=request.getParameter("utype");
us.setUname(uname);
us.setUtype(utype);
ss.save(us);
tx.commit();
}
catch(Exception e){ out.println("Error"+e.getMessage()); }
try
{
ss.beginTransaction();
ubook=ss.createQuery("from User").list();
}
catch(Exception e){ }
%>
<html>
<head>
<title>User View</title>
</head>
<body>
User View
Click here to go <a href="index.jsp"> BACK </a>
<br><br>
<%
Iterator it=ubook.iterator();
while(it.hasNext())
{
User eachrecord=(User)it.next();
out.print(eachrecord.getUid()+" ");
out.print(eachrecord.getUname()+"<br>");
out.print(eachrecord.getUtype()+"<br><hr>");
}
%>
</body>
</html>


User.java:-
package hibernet;
// Generated 4 Oct, 2018 8:02:52 AM by Hibernate Tools 4.3.1
/**
* User generated by hbm2java
*/
public class User implements java.io.Serializable
{
private Integer uid;
private String uname;
private String utype;
public User() {}
public User(String uname, String utype) {
this.uname = uname;
this.utype = utype;
}
public Integer getUid() {
return this.uid;
}
public void setUid(Integer uid) {
this.uid = uid;
}
public String getUname() {
return this.uname;
}
public void setUname(String uname) {
this.uname = uname;
}
public String getUtype() {
return this.utype;
}
public void setUtype(String utype) {
this.utype = utype;
}
}
